{"typedefs":[{"typedef": "vr::TrackedDeviceIndex_t","type": "uint32_t"}
,{"typedef": "vr::VREvent_Data_t","type": "union VREvent_Data_t"}
,{"typedef": "vr::VRControllerState_t","type": "struct vr::VRControllerState001_t"}
,{"typedef": "vr::VROverlayHandle_t","type": "uint64_t"}
,{"typedef": "vr::VRNotificationId","type": "uint32_t"}
],
"enums":[
	{"enumname": "vr::Hmd_Eye","values": [ 
	{"name": "Eye_Left","value": "0"}
	,{"name": "Eye_Right","value": "1"}
]}
,	{"enumname": "vr::GraphicsAPIConvention","values": [ 
	{"name": "API_DirectX","value": "0"}
	,{"name": "API_OpenGL","value": "1"}
]}
,	{"enumname": "vr::HmdTrackingResult","values": [ 
	{"name": "TrackingResult_Uninitialized","value": "1"}
	,{"name": "TrackingResult_Calibrating_InProgress","value": "100"}
	,{"name": "TrackingResult_Calibrating_OutOfRange","value": "101"}
	,{"name": "TrackingResult_Running_OK","value": "200"}
	,{"name": "TrackingResult_Running_OutOfRange","value": "201"}
]}
,	{"enumname": "vr::TrackedDeviceClass","values": [ 
	{"name": "TrackedDeviceClass_Invalid","value": "0"}
	,{"name": "TrackedDeviceClass_HMD","value": "1"}
	,{"name": "TrackedDeviceClass_Controller","value": "2"}
	,{"name": "TrackedDeviceClass_TrackingReference","value": "4"}
	,{"name": "TrackedDeviceClass_Other","value": "1000"}
]}
,	{"enumname": "vr::TrackingUniverseOrigin","values": [ 
	{"name": "TrackingUniverseSeated","value": "0"}
	,{"name": "TrackingUniverseStanding","value": "1"}
	,{"name": "TrackingUniverseRawAndUncalibrated","value": "2"}
]}
,	{"enumname": "vr::TrackedDeviceProperty","values": [ 
	{"name": "Prop_TrackingSystemName_String","value": "1000"}
	,{"name": "Prop_ModelNumber_String","value": "1001"}
	,{"name": "Prop_SerialNumber_String","value": "1002"}
	,{"name": "Prop_RenderModelName_String","value": "1003"}
	,{"name": "Prop_WillDriftInYaw_Bool","value": "1004"}
	,{"name": "Prop_ManufacturerName_String","value": "1005"}
	,{"name": "Prop_TrackingFirmwareVersion_String","value": "1006"}
	,{"name": "Prop_HardwareRevision_String","value": "1007"}
	,{"name": "Prop_AllWirelessDongleDescriptions_String","value": "1008"}
	,{"name": "Prop_ConnectedWirelessDongle_String","value": "1009"}
	,{"name": "Prop_DeviceIsWireless_Bool","value": "1010"}
	,{"name": "Prop_DeviceIsCharging_Bool","value": "1011"}
	,{"name": "Prop_DeviceBatteryPercentage_Float","value": "1012"}
	,{"name": "Prop_StatusDisplayTransform_Matrix34","value": "1013"}
	,{"name": "Prop_ReportsTimeSinceVSync_Bool","value": "2000"}
	,{"name": "Prop_SecondsFromVsyncToPhotons_Float","value": "2001"}
	,{"name": "Prop_DisplayFrequency_Float","value": "2002"}
	,{"name": "Prop_UserIpdMeters_Float","value": "2003"}
	,{"name": "Prop_CurrentUniverseId_Uint64","value": "2004"}
	,{"name": "Prop_PreviousUniverseId_Uint64","value": "2005"}
	,{"name": "Prop_DisplayFirmwareVersion_String","value": "2006"}
	,{"name": "Prop_IsOnDesktop_Bool","value": "2007"}
	,{"name": "Prop_AttachedDeviceId_String","value": "3000"}
	,{"name": "Prop_SupportedButtons_Uint64","value": "3001"}
	,{"name": "Prop_Axis0Type_Int32","value": "3002"}
	,{"name": "Prop_Axis1Type_Int32","value": "3003"}
	,{"name": "Prop_Axis2Type_Int32","value": "3004"}
	,{"name": "Prop_Axis3Type_Int32","value": "3005"}
	,{"name": "Prop_Axis4Type_Int32","value": "3006"}
	,{"name": "Prop_FieldOfViewLeftDegrees_Float","value": "4000"}
	,{"name": "Prop_FieldOfViewRightDegrees_Float","value": "4001"}
	,{"name": "Prop_FieldOfViewTopDegrees_Float","value": "4002"}
	,{"name": "Prop_FieldOfViewBottomDegrees_Float","value": "4003"}
	,{"name": "Prop_TrackingRangeMinimumMeters_Float","value": "4004"}
	,{"name": "Prop_TrackingRangeMaximumMeters_Float","value": "4005"}
]}
,	{"enumname": "vr::TrackedPropertyError","values": [ 
	{"name": "TrackedProp_Success","value": "0"}
	,{"name": "TrackedProp_WrongDataType","value": "1"}
	,{"name": "TrackedProp_WrongDeviceClass","value": "2"}
	,{"name": "TrackedProp_BufferTooSmall","value": "3"}
	,{"name": "TrackedProp_UnknownProperty","value": "4"}
	,{"name": "TrackedProp_InvalidDevice","value": "5"}
	,{"name": "TrackedProp_CouldNotContactServer","value": "6"}
	,{"name": "TrackedProp_ValueNotProvidedByDevice","value": "7"}
	,{"name": "TrackedProp_StringExceedsMaximumLength","value": "8"}
]}
,	{"enumname": "vr::EVREventType","values": [ 
	{"name": "VREvent_None","value": "0"}
	,{"name": "VREvent_TrackedDeviceActivated","value": "100"}
	,{"name": "VREvent_TrackedDeviceDeactivated","value": "101"}
	,{"name": "VREvent_TrackedDeviceUpdated","value": "102"}
	,{"name": "VREvent_ButtonPress","value": "200"}
	,{"name": "VREvent_ButtonUnpress","value": "201"}
	,{"name": "VREvent_ButtonTouch","value": "202"}
	,{"name": "VREvent_ButtonUntouch","value": "203"}
	,{"name": "VREvent_MouseMove","value": "300"}
	,{"name": "VREvent_MouseButtonDown","value": "301"}
	,{"name": "VREvent_MouseButtonUp","value": "302"}
	,{"name": "VREvent_InputFocusCaptured","value": "400"}
	,{"name": "VREvent_InputFocusReleased","value": "401"}
	,{"name": "VREvent_SceneFocusLost","value": "402"}
	,{"name": "VREvent_SceneFocusGained","value": "403"}
	,{"name": "VREvent_OverlayShown","value": "500"}
	,{"name": "VREvent_OverlayHidden","value": "501"}
	,{"name": "VREvent_DashboardActivated","value": "502"}
	,{"name": "VREvent_DashboardDeactivated","value": "503"}
	,{"name": "VREvent_DashboardThumbSelected","value": "504"}
	,{"name": "VREvent_DashboardRequested","value": "505"}
	,{"name": "VREvent_ResetDashboard","value": "506"}
	,{"name": "VREvent_Notification_Show","value": "600"}
	,{"name": "VREvent_Notification_Dismissed","value": "601"}
	,{"name": "VREvent_Notification_BeginInteraction","value": "602"}
	,{"name": "VREvent_Quit","value": "700"}
	,{"name": "VREvent_ProcessQuit","value": "701"}
	,{"name": "VREvent_ChaperoneDataHasChanged","value": "800"}
]}
,	{"enumname": "vr::EVRButtonId","values": [ 
	{"name": "k_EButton_System","value": "0"}
	,{"name": "k_EButton_ApplicationMenu","value": "1"}
	,{"name": "k_EButton_Grip","value": "2"}
	,{"name": "k_EButton_Axis0","value": "32"}
	,{"name": "k_EButton_Axis1","value": "33"}
	,{"name": "k_EButton_Axis2","value": "34"}
	,{"name": "k_EButton_Axis3","value": "35"}
	,{"name": "k_EButton_Axis4","value": "36"}
	,{"name": "k_EButton_SteamVR_Touchpad","value": "32"}
	,{"name": "k_EButton_SteamVR_Trigger","value": "33"}
	,{"name": "k_EButton_Max","value": "64"}
]}
,	{"enumname": "vr::EVRMouseButton","values": [ 
	{"name": "VRMouseButton_Left","value": "1"}
	,{"name": "VRMouseButton_Right","value": "2"}
	,{"name": "VRMouseButton_Middle","value": "4"}
]}
,	{"enumname": "vr::EVRControllerAxisType","values": [ 
	{"name": "k_eControllerAxis_None","value": "0"}
	,{"name": "k_eControllerAxis_TrackPad","value": "1"}
	,{"name": "k_eControllerAxis_Joystick","value": "2"}
	,{"name": "k_eControllerAxis_Trigger","value": "3"}
]}
,	{"enumname": "vr::EVRControllerEventOutputType","values": [ 
	{"name": "ControllerEventOutput_OSEvents","value": "0"}
	,{"name": "ControllerEventOutput_VREvents","value": "1"}
]}
,	{"enumname": "vr::HmdError","values": [ 
	{"name": "HmdError_None","value": "0"}
	,{"name": "HmdError_Unknown","value": "1"}
	,{"name": "HmdError_Init_InstallationNotFound","value": "100"}
	,{"name": "HmdError_Init_InstallationCorrupt","value": "101"}
	,{"name": "HmdError_Init_VRClientDLLNotFound","value": "102"}
	,{"name": "HmdError_Init_FileNotFound","value": "103"}
	,{"name": "HmdError_Init_FactoryNotFound","value": "104"}
	,{"name": "HmdError_Init_InterfaceNotFound","value": "105"}
	,{"name": "HmdError_Init_InvalidInterface","value": "106"}
	,{"name": "HmdError_Init_UserConfigDirectoryInvalid","value": "107"}
	,{"name": "HmdError_Init_HmdNotFound","value": "108"}
	,{"name": "HmdError_Init_NotInitialized","value": "109"}
	,{"name": "HmdError_Init_PathRegistryNotFound","value": "110"}
	,{"name": "HmdError_Init_NoConfigPath","value": "111"}
	,{"name": "HmdError_Init_NoLogPath","value": "112"}
	,{"name": "HmdError_Init_PathRegistryNotWritable","value": "113"}
	,{"name": "HmdError_Driver_Failed","value": "200"}
	,{"name": "HmdError_Driver_Unknown","value": "201"}
	,{"name": "HmdError_Driver_HmdUnknown","value": "202"}
	,{"name": "HmdError_Driver_NotLoaded","value": "203"}
	,{"name": "HmdError_Driver_RuntimeOutOfDate","value": "204"}
	,{"name": "HmdError_Driver_HmdInUse","value": "205"}
	,{"name": "HmdError_Driver_NotCalibrated","value": "206"}
	,{"name": "HmdError_Driver_CalibrationInvalid","value": "207"}
	,{"name": "HmdError_Driver_HmdDisplayNotFound","value": "208"}
	,{"name": "HmdError_IPC_ServerInitFailed","value": "300"}
	,{"name": "HmdError_IPC_ConnectFailed","value": "301"}
	,{"name": "HmdError_IPC_SharedStateInitFailed","value": "302"}
	,{"name": "HmdError_IPC_CompositorInitFailed","value": "303"}
	,{"name": "HmdError_IPC_MutexInitFailed","value": "304"}
	,{"name": "HmdError_VendorSpecific_UnableToConnectToOculusRuntime","value": "1000"}
	,{"name": "HmdError_Steam_SteamInstallationNotFound","value": "2000"}
]}
,	{"enumname": "vr::VRCompositorError","values": [ 
	{"name": "VRCompositorError_None","value": "0"}
	,{"name": "VRCompositorError_IncompatibleVersion","value": "100"}
	,{"name": "VRCompositorError_DoNotHaveFocus","value": "101"}
	,{"name": "VRCompositorError_InvalidTexture","value": "102"}
]}
,	{"enumname": "vr::ChaperoneCalibrationState","values": [ 
	{"name": "ChaperoneCalibrationState_OK","value": "1"}
	,{"name": "ChaperoneCalibrationState_Warning","value": "100"}
	,{"name": "ChaperoneCalibrationState_Warning_BaseStationMayHaveMoved","value": "101"}
	,{"name": "ChaperoneCalibrationState_Warning_BaseStationRemoved","value": "102"}
	,{"name": "ChaperoneCalibrationState_Warning_SeatedBoundsInvalid","value": "103"}
	,{"name": "ChaperoneCalibrationState_Error","value": "200"}
	,{"name": "ChaperoneCalibrationState_Error_BaseStationUninitalized","value": "201"}
	,{"name": "ChaperoneCalibrationState_Error_BaseStationConflict","value": "202"}
	,{"name": "ChaperoneCalibrationState_Error_SoftBoundsInvalid","value": "203"}
	,{"name": "ChaperoneCalibrationState_Error_HardBoundsInvalid","value": "204"}
]}
,	{"enumname": "vr::VROverlayError","values": [ 
	{"name": "VROverlayError_None","value": "0"}
	,{"name": "VROverlayError_UnknownOverlay","value": "10"}
	,{"name": "VROverlayError_InvalidHandle","value": "11"}
	,{"name": "VROverlayError_PermissionDenied","value": "12"}
	,{"name": "VROverlayError_OverlayLimitExceeded","value": "13"}
	,{"name": "VROverlayError_WrongVisibilityType","value": "14"}
	,{"name": "VROverlayError_KeyTooLong","value": "15"}
	,{"name": "VROverlayError_NameTooLong","value": "16"}
	,{"name": "VROverlayError_KeyInUse","value": "17"}
	,{"name": "VROverlayError_WrongTransformType","value": "18"}
	,{"name": "VROverlayError_InvalidTrackedDevice","value": "19"}
	,{"name": "VROverlayError_InvalidParameter","value": "20"}
	,{"name": "VROverlayError_ThumbnailCantBeDestroyed","value": "21"}
	,{"name": "VROverlayError_ArrayTooSmall","value": "22"}
	,{"name": "VROverlayError_RequestFailed","value": "23"}
	,{"name": "VROverlayError_InvalidTexture","value": "24"}
]}
,	{"enumname": "vr::VROverlayInputMethod","values": [ 
	{"name": "VROverlayInputMethod_None","value": "0"}
	,{"name": "VROverlayInputMethod_Mouse","value": "1"}
]}
,	{"enumname": "vr::VROverlayTransformType","values": [ 
	{"name": "VROverlayTransform_Absolute","value": "0"}
	,{"name": "VROverlayTransform_TrackedDeviceRelative","value": "1"}
	,{"name": "VROverlayTransform_SystemOverlay","value": "2"}
]}
,	{"enumname": "vr::VROverlayFlags","values": [ 
	{"name": "VROverlayFlags_None","value": "0"}
	,{"name": "VROverlayFlags_Curved","value": "1"}
	,{"name": "VROverlayFlags_RGSS4X","value": "2"}
]}
,	{"enumname": "vr::CameraImageResult","values": [ 
	{"name": "CameraImageResult_OK","value": "0"}
	,{"name": "CameraImageResult_Uninitalized","value": "1"}
	,{"name": "CameraImageResult_NotReady","value": "2"}
	,{"name": "CameraImageResult_SameFrame","value": "3"}
]}
,	{"enumname": "vr::NotificationError_t","values": [ 
	{"name": "k_ENotificationError_OK","value": "0"}
	,{"name": "k_ENotificationError_Fail","value": "1"}
]}
],
"consts":[{
	"constname": "k_unTrackingStringSize","consttype": "const uint32_t", "constval": "32"}
,{
	"constname": "k_unMaxTrackedDeviceCount","consttype": "const uint32_t", "constval": "16"}
,{
	"constname": "k_unTrackedDeviceIndex_Hmd","consttype": "const uint32_t", "constval": "0"}
,{
	"constname": "k_unMaxDriverDebugResponseSize","consttype": "const uint32_t", "constval": "32768"}
,{
	"constname": "k_unTrackedDeviceIndexInvalid","consttype": "const uint32_t", "constval": "4294967295"}
,{
	"constname": "k_unMaxPropertyStringSize","consttype": "const uint32_t", "constval": "32768"}
,{
	"constname": "k_unControllerStateAxisCount","consttype": "const uint32_t", "constval": "5"}
,{
	"constname": "IVRSystem_Version","consttype": "const char *const", "constval": "IVRSystem_005"}
,{
	"constname": "IVRCompositor_Version","consttype": "const char *const", "constval": "IVRCompositor_007"}
,{
	"constname": "IVRChaperone_Version","consttype": "const char *const", "constval": "IVRChaperone_002"}
,{
	"constname": "k_ulOverlayHandleInvalid","consttype": "const VROverlayHandle_t", "constval": "0"}
,{
	"constname": "k_unVROverlayMaxKeyLength","consttype": "const uint32_t", "constval": "128"}
,{
	"constname": "k_unVROverlayMaxNameLength","consttype": "const uint32_t", "constval": "128"}
,{
	"constname": "k_unMaxOverlayCount","consttype": "const uint32_t", "constval": "32"}
,{
	"constname": "IVROverlay_Version","consttype": "const char *const", "constval": "IVROverlay_002"}
,{
	"constname": "IVRRenderModels_Version","consttype": "const char *const", "constval": "IVRRenderModels_001"}
,{
	"constname": "IVRControlPanel_Version","consttype": "const char *const", "constval": "IVRControlPanel_001"}
,{
	"constname": "IVRCameraAccess_Version","consttype": "const char *const", "constval": "IVRCameraAccess_001"}
,{
	"constname": "IVRChaperoneSetup_Version","consttype": "const char *const", "constval": "IVRChaperoneSetup_001"}
,{
	"constname": "IVRNotifications_Version","consttype": "const char *const", "constval": "IVRNotifications_001"}
],
"structs":[{"struct": "vr::HmdMatrix34_t","fields": [
{ "fieldname": "m", "fieldtype": "float [3][4]"}]}
,{"struct": "vr::HmdMatrix44_t","fields": [
{ "fieldname": "m", "fieldtype": "float [4][4]"}]}
,{"struct": "vr::HmdVector3_t","fields": [
{ "fieldname": "v", "fieldtype": "float [3]"}]}
,{"struct": "vr::HmdVector3d_t","fields": [
{ "fieldname": "v", "fieldtype": "double [3]"}]}
,{"struct": "vr::HmdVector2_t","fields": [
{ "fieldname": "v", "fieldtype": "float [2]"}]}
,{"struct": "vr::HmdQuaternion_t","fields": [
{ "fieldname": "w", "fieldtype": "double"},
{ "fieldname": "x", "fieldtype": "double"},
{ "fieldname": "y", "fieldtype": "double"},
{ "fieldname": "z", "fieldtype": "double"}]}
,{"struct": "vr::HmdQuad_t","fields": [
{ "fieldname": "vCorners", "fieldtype": "struct vr::HmdVector3_t [4]"}]}
,{"struct": "vr::DistortionCoordinates_t","fields": [
{ "fieldname": "rfRed", "fieldtype": "float [2]"},
{ "fieldname": "rfGreen", "fieldtype": "float [2]"},
{ "fieldname": "rfBlue", "fieldtype": "float [2]"}]}
,{"struct": "vr::TrackedDevicePose_t","fields": [
{ "fieldname": "mDeviceToAbsoluteTracking", "fieldtype": "struct vr::HmdMatrix34_t"},
{ "fieldname": "vVelocity", "fieldtype": "struct vr::HmdVector3_t"},
{ "fieldname": "vAngularVelocity", "fieldtype": "struct vr::HmdVector3_t"},
{ "fieldname": "eTrackingResult", "fieldtype": "enum vr::HmdTrackingResult"},
{ "fieldname": "bPoseIsValid", "fieldtype": "_Bool"},
{ "fieldname": "bDeviceIsConnected", "fieldtype": "_Bool"}]}
,{"struct": "vr::RenderModel_Vertex_t","fields": [
{ "fieldname": "vPosition", "fieldtype": "struct vr::HmdVector3_t"},
{ "fieldname": "vNormal", "fieldtype": "struct vr::HmdVector3_t"},
{ "fieldname": "rfTextureCoord", "fieldtype": "float [2]"}]}
,{"struct": "vr::RenderModel_TextureMap_t","fields": [
{ "fieldname": "unWidth", "fieldtype": "uint16_t"},
{ "fieldname": "unHeight", "fieldtype": "uint16_t"},
{ "fieldname": "rubTextureMapData", "fieldtype": "const uint8_t *"}]}
,{"struct": "vr::RenderModel_t","fields": [
{ "fieldname": "ulInternalHandle", "fieldtype": "uint64_t"},
{ "fieldname": "rVertexData", "fieldtype": "const struct vr::RenderModel_Vertex_t *"},
{ "fieldname": "unVertexCount", "fieldtype": "uint32_t"},
{ "fieldname": "rIndexData", "fieldtype": "const uint16_t *"},
{ "fieldname": "unTriangleCount", "fieldtype": "uint32_t"},
{ "fieldname": "diffuseTexture", "fieldtype": "struct vr::RenderModel_TextureMap_t"}]}
,{"struct": "vr::VRTextureBounds_t","fields": [
{ "fieldname": "uMin", "fieldtype": "float"},
{ "fieldname": "vMin", "fieldtype": "float"},
{ "fieldname": "uMax", "fieldtype": "float"},
{ "fieldname": "vMax", "fieldtype": "float"}]}
,{"struct": "vr::VREvent_Controller_t","fields": [
{ "fieldname": "button", "fieldtype": "enum vr::EVRButtonId"}]}
,{"struct": "vr::VREvent_Mouse_t","fields": [
{ "fieldname": "x", "fieldtype": "float"},
{ "fieldname": "y", "fieldtype": "float"},
{ "fieldname": "button", "fieldtype": "enum vr::EVRMouseButton"}]}
,{"struct": "vr::VREvent_Notification_t","fields": [
{ "fieldname": "ulUserValue", "fieldtype": "uint64_t"},
{ "fieldname": "notificationId", "fieldtype": "uint32_t"}]}
,{"struct": "vr::VREvent_Process_t","fields": [
{ "fieldname": "pid", "fieldtype": "uint32_t"},
{ "fieldname": "oldPid", "fieldtype": "uint32_t"}]}
,{"struct": "vr::VREvent_Overlay_t","fields": [
{ "fieldname": "overlayHandle", "fieldtype": "uint64_t"}]}
,{"struct": "vr::VREvent_Reserved_t","fields": [
{ "fieldname": "reserved0", "fieldtype": "uint64_t"},
{ "fieldname": "reserved1", "fieldtype": "uint64_t"}]}
,{"struct": "vr::(anonymous)","fields": [
{ "fieldname": "reserved", "fieldtype": "struct vr::VREvent_Reserved_t"},
{ "fieldname": "controller", "fieldtype": "struct vr::VREvent_Controller_t"},
{ "fieldname": "mouse", "fieldtype": "struct vr::VREvent_Mouse_t"},
{ "fieldname": "process", "fieldtype": "struct vr::VREvent_Process_t"},
{ "fieldname": "notification", "fieldtype": "struct vr::VREvent_Notification_t"},
{ "fieldname": "overlay", "fieldtype": "struct vr::VREvent_Overlay_t"}]}
,{"struct": "vr::VREvent_t","fields": [
{ "fieldname": "eventType", "fieldtype": "enum vr::EVREventType"},
{ "fieldname": "trackedDeviceIndex", "fieldtype": "TrackedDeviceIndex_t"},
{ "fieldname": "data", "fieldtype": "VREvent_Data_t"},
{ "fieldname": "eventAgeSeconds", "fieldtype": "float"}]}
,{"struct": "vr::HiddenAreaMesh_t","fields": [
{ "fieldname": "pVertexData", "fieldtype": "const struct vr::HmdVector2_t *"},
{ "fieldname": "unTriangleCount", "fieldtype": "uint32_t"}]}
,{"struct": "vr::VRControllerAxis_t","fields": [
{ "fieldname": "x", "fieldtype": "float"},
{ "fieldname": "y", "fieldtype": "float"}]}
,{"struct": "vr::VRControllerState001_t","fields": [
{ "fieldname": "unPacketNum", "fieldtype": "uint32_t"},
{ "fieldname": "ulButtonPressed", "fieldtype": "uint64_t"},
{ "fieldname": "ulButtonTouched", "fieldtype": "uint64_t"},
{ "fieldname": "rAxis", "fieldtype": "struct vr::VRControllerAxis_t [5]"}]}
,{"struct": "vr::Compositor_OverlaySettings","fields": [
{ "fieldname": "size", "fieldtype": "uint32_t"},
{ "fieldname": "curved", "fieldtype": "_Bool"},
{ "fieldname": "antialias", "fieldtype": "_Bool"},
{ "fieldname": "scale", "fieldtype": "float"},
{ "fieldname": "distance", "fieldtype": "float"},
{ "fieldname": "alpha", "fieldtype": "float"},
{ "fieldname": "uOffset", "fieldtype": "float"},
{ "fieldname": "vOffset", "fieldtype": "float"},
{ "fieldname": "uScale", "fieldtype": "float"},
{ "fieldname": "vScale", "fieldtype": "float"},
{ "fieldname": "gridDivs", "fieldtype": "float"},
{ "fieldname": "gridWidth", "fieldtype": "float"},
{ "fieldname": "gridScale", "fieldtype": "float"},
{ "fieldname": "transform", "fieldtype": "struct vr::HmdMatrix44_t"}]}
,{"struct": "vr::Compositor_FrameTiming","fields": [
{ "fieldname": "size", "fieldtype": "uint32_t"},
{ "fieldname": "frameStart", "fieldtype": "double"},
{ "fieldname": "frameVSync", "fieldtype": "float"},
{ "fieldname": "droppedFrames", "fieldtype": "uint32_t"},
{ "fieldname": "frameIndex", "fieldtype": "uint32_t"},
{ "fieldname": "pose", "fieldtype": "vr::TrackedDevicePose_t"},
{ "fieldname": "prediction", "fieldtype": "float"},
{ "fieldname": "m_flFrameIntervalMs", "fieldtype": "float"},
{ "fieldname": "m_flSceneRenderCpuMs", "fieldtype": "float"},
{ "fieldname": "m_flSceneRenderGpuMs", "fieldtype": "float"},
{ "fieldname": "m_flCompositorRenderCpuMs", "fieldtype": "float"},
{ "fieldname": "m_flCompositorRenderGpuMs", "fieldtype": "float"},
{ "fieldname": "m_flPresentCallCpuMs", "fieldtype": "float"},
{ "fieldname": "m_flRunningStartMs", "fieldtype": "float"}]}
,{"struct": "vr::ChaperoneSoftBoundsInfo_t","fields": [
{ "fieldname": "quadCorners", "fieldtype": "struct vr::HmdQuad_t"}]}
,{"struct": "vr::ChaperoneSeatedBoundsInfo_t","fields": [
{ "fieldname": "vSeatedHeadPosition", "fieldtype": "struct vr::HmdVector3_t"},
{ "fieldname": "vDeskEdgePositions", "fieldtype": "struct vr::HmdVector3_t [2]"}]}
,{"struct": "vr::VROverlayIntersectionParams_t","fields": [
{ "fieldname": "vSource", "fieldtype": "struct vr::HmdVector3_t"},
{ "fieldname": "vDirection", "fieldtype": "struct vr::HmdVector3_t"},
{ "fieldname": "eOrigin", "fieldtype": "enum vr::TrackingUniverseOrigin"}]}
,{"struct": "vr::VROverlayIntersectionResults_t","fields": [
{ "fieldname": "vPoint", "fieldtype": "struct vr::HmdVector3_t"},
{ "fieldname": "vNormal", "fieldtype": "struct vr::HmdVector3_t"},
{ "fieldname": "vUVs", "fieldtype": "struct vr::HmdVector2_t"},
{ "fieldname": "fDistance", "fieldtype": "float"}]}
,{"struct": "vr::CameraInfo_t","fields": [
{ "fieldname": "width", "fieldtype": "uint32_t"},
{ "fieldname": "height", "fieldtype": "uint32_t"},
{ "fieldname": "depth", "fieldtype": "uint32_t"},
{ "fieldname": "fx", "fieldtype": "float"},
{ "fieldname": "cx", "fieldtype": "float"},
{ "fieldname": "fy", "fieldtype": "float"},
{ "fieldname": "cy", "fieldtype": "float"}]}
,{"struct": "vr::CameraImage_t","fields": [
{ "fieldname": "frameID", "fieldtype": "int32_t"},
{ "fieldname": "pose", "fieldtype": "struct vr::HmdMatrix34_t"},
{ "fieldname": "pBuffer", "fieldtype": "unsigned char *"},
{ "fieldname": "unBufferLen", "fieldtype": "uint32_t"},
{ "fieldname": "result", "fieldtype": "enum vr::CameraImageResult"}]}
,{"struct": "vr::NotificationBitmap","fields": [
{ "fieldname": "bytes", "fieldtype": "char *"},
{ "fieldname": "width", "fieldtype": "int32_t"},
{ "fieldname": "height", "fieldtype": "int32_t"},
{ "fieldname": "depth", "fieldtype": "int32_t"}]}
,{"struct": "vr::NotificationItem","fields": [
{ "fieldname": "notificationId", "fieldtype": "VRNotificationId"}]}
],
"methods":[{
	"classname": "vr::IVRSystem",
	"methodname": "GetWindowBounds",
	"returntype": "void",
	"params": [ 
{	"paramname": "pnX" ,"paramtype": "int32_t *"},
{	"paramname": "pnY" ,"paramtype": "int32_t *"},
{	"paramname": "pnWidth" ,"paramtype": "uint32_t *"},
{	"paramname": "pnHeight" ,"paramtype": "uint32_t *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetRecommendedRenderTargetSize",
	"returntype": "void",
	"params": [ 
{	"paramname": "pnWidth" ,"paramtype": "uint32_t *"},
{	"paramname": "pnHeight" ,"paramtype": "uint32_t *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetEyeOutputViewport",
	"returntype": "void",
	"params": [ 
{	"paramname": "eEye" ,"paramtype": "vr::Hmd_Eye"},
{	"paramname": "pnX" ,"paramtype": "uint32_t *"},
{	"paramname": "pnY" ,"paramtype": "uint32_t *"},
{	"paramname": "pnWidth" ,"paramtype": "uint32_t *"},
{	"paramname": "pnHeight" ,"paramtype": "uint32_t *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetProjectionMatrix",
	"returntype": "struct vr::HmdMatrix44_t",
	"params": [ 
{	"paramname": "eEye" ,"paramtype": "vr::Hmd_Eye"},
{	"paramname": "fNearZ" ,"paramtype": "float"},
{	"paramname": "fFarZ" ,"paramtype": "float"},
{	"paramname": "eProjType" ,"paramtype": "vr::GraphicsAPIConvention"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetProjectionRaw",
	"returntype": "void",
	"params": [ 
{	"paramname": "eEye" ,"paramtype": "vr::Hmd_Eye"},
{	"paramname": "pfLeft" ,"paramtype": "float *"},
{	"paramname": "pfRight" ,"paramtype": "float *"},
{	"paramname": "pfTop" ,"paramtype": "float *"},
{	"paramname": "pfBottom" ,"paramtype": "float *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "ComputeDistortion",
	"returntype": "struct vr::DistortionCoordinates_t",
	"params": [ 
{	"paramname": "eEye" ,"paramtype": "vr::Hmd_Eye"},
{	"paramname": "fU" ,"paramtype": "float"},
{	"paramname": "fV" ,"paramtype": "float"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetEyeToHeadTransform",
	"returntype": "struct vr::HmdMatrix34_t",
	"params": [ 
{	"paramname": "eEye" ,"paramtype": "vr::Hmd_Eye"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetTimeSinceLastVsync",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pfSecondsSinceLastVsync" ,"paramtype": "float *"},
{	"paramname": "pulFrameCounter" ,"paramtype": "uint64_t *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetD3D9AdapterIndex",
	"returntype": "int32_t"
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetDXGIOutputInfo",
	"returntype": "void",
	"params": [ 
{	"paramname": "pnAdapterIndex" ,"paramtype": "int32_t *"},
{	"paramname": "pnAdapterOutputIndex" ,"paramtype": "int32_t *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "AttachToWindow",
	"returntype": "bool",
	"params": [ 
{	"paramname": "hWnd" ,"paramtype": "void *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetDeviceToAbsoluteTrackingPose",
	"returntype": "void",
	"params": [ 
{	"paramname": "eOrigin" ,"paramtype": "vr::TrackingUniverseOrigin"},
{	"paramname": "fPredictedSecondsToPhotonsFromNow" ,"paramtype": "float"},
{	"paramname": "pTrackedDevicePoseArray" ,"array_count": "unTrackedDevicePoseArrayCount" ,"paramtype": "struct vr::TrackedDevicePose_t *"},
{	"paramname": "unTrackedDevicePoseArrayCount" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "ResetSeatedZeroPose",
	"returntype": "void"
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetSeatedZeroPoseToStandingAbsoluteTrackingPose",
	"returntype": "struct vr::HmdMatrix34_t"
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetSortedTrackedDeviceIndicesOfClass",
	"returntype": "uint32_t",
	"params": [ 
{	"paramname": "eTrackedDeviceClass" ,"paramtype": "vr::TrackedDeviceClass"},
{	"paramname": "punTrackedDeviceIndexArray" ,"array_count": "unTrackedDeviceIndexArrayCount" ,"paramtype": "vr::TrackedDeviceIndex_t *"},
{	"paramname": "unTrackedDeviceIndexArrayCount" ,"paramtype": "uint32_t"},
{	"paramname": "unRelativeToTrackedDeviceIndex" ,"paramtype": "vr::TrackedDeviceIndex_t"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetTrackedDeviceClass",
	"returntype": "vr::TrackedDeviceClass",
	"params": [ 
{	"paramname": "unDeviceIndex" ,"paramtype": "vr::TrackedDeviceIndex_t"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "IsTrackedDeviceConnected",
	"returntype": "bool",
	"params": [ 
{	"paramname": "unDeviceIndex" ,"paramtype": "vr::TrackedDeviceIndex_t"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetBoolTrackedDeviceProperty",
	"returntype": "bool",
	"params": [ 
{	"paramname": "unDeviceIndex" ,"paramtype": "vr::TrackedDeviceIndex_t"},
{	"paramname": "prop" ,"paramtype": "vr::TrackedDeviceProperty"},
{	"paramname": "pError" ,"paramtype": "vr::TrackedPropertyError *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetFloatTrackedDeviceProperty",
	"returntype": "float",
	"params": [ 
{	"paramname": "unDeviceIndex" ,"paramtype": "vr::TrackedDeviceIndex_t"},
{	"paramname": "prop" ,"paramtype": "vr::TrackedDeviceProperty"},
{	"paramname": "pError" ,"paramtype": "vr::TrackedPropertyError *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetInt32TrackedDeviceProperty",
	"returntype": "int32_t",
	"params": [ 
{	"paramname": "unDeviceIndex" ,"paramtype": "vr::TrackedDeviceIndex_t"},
{	"paramname": "prop" ,"paramtype": "vr::TrackedDeviceProperty"},
{	"paramname": "pError" ,"paramtype": "vr::TrackedPropertyError *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetUint64TrackedDeviceProperty",
	"returntype": "uint64_t",
	"params": [ 
{	"paramname": "unDeviceIndex" ,"paramtype": "vr::TrackedDeviceIndex_t"},
{	"paramname": "prop" ,"paramtype": "vr::TrackedDeviceProperty"},
{	"paramname": "pError" ,"paramtype": "vr::TrackedPropertyError *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetMatrix34TrackedDeviceProperty",
	"returntype": "struct vr::HmdMatrix34_t",
	"params": [ 
{	"paramname": "unDeviceIndex" ,"paramtype": "vr::TrackedDeviceIndex_t"},
{	"paramname": "prop" ,"paramtype": "vr::TrackedDeviceProperty"},
{	"paramname": "pError" ,"paramtype": "vr::TrackedPropertyError *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetStringTrackedDeviceProperty",
	"returntype": "uint32_t",
	"params": [ 
{	"paramname": "unDeviceIndex" ,"paramtype": "vr::TrackedDeviceIndex_t"},
{	"paramname": "prop" ,"paramtype": "vr::TrackedDeviceProperty"},
{	"paramname": "pchValue" ,"out_string": " " ,"paramtype": "char *"},
{	"paramname": "unBufferSize" ,"paramtype": "uint32_t"},
{	"paramname": "pError" ,"paramtype": "vr::TrackedPropertyError *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetPropErrorNameFromEnum",
	"returntype": "const char *",
	"params": [ 
{	"paramname": "error" ,"paramtype": "vr::TrackedPropertyError"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "PollNextEvent",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pEvent" ,"paramtype": "struct vr::VREvent_t *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "PollNextEventWithPose",
	"returntype": "bool",
	"params": [ 
{	"paramname": "eOrigin" ,"paramtype": "vr::TrackingUniverseOrigin"},
{	"paramname": "pEvent" ,"paramtype": "vr::VREvent_t *"},
{	"paramname": "pTrackedDevicePose" ,"paramtype": "vr::TrackedDevicePose_t *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetEventTypeNameFromEnum",
	"returntype": "const char *",
	"params": [ 
{	"paramname": "eType" ,"paramtype": "vr::EVREventType"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetHiddenAreaMesh",
	"returntype": "struct vr::HiddenAreaMesh_t",
	"params": [ 
{	"paramname": "eEye" ,"paramtype": "vr::Hmd_Eye"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetControllerState",
	"returntype": "bool",
	"params": [ 
{	"paramname": "unControllerDeviceIndex" ,"paramtype": "vr::TrackedDeviceIndex_t"},
{	"paramname": "pControllerState" ,"paramtype": "vr::VRControllerState_t *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetControllerStateWithPose",
	"returntype": "bool",
	"params": [ 
{	"paramname": "eOrigin" ,"paramtype": "vr::TrackingUniverseOrigin"},
{	"paramname": "unControllerDeviceIndex" ,"paramtype": "vr::TrackedDeviceIndex_t"},
{	"paramname": "pControllerState" ,"paramtype": "vr::VRControllerState_t *"},
{	"paramname": "pTrackedDevicePose" ,"paramtype": "struct vr::TrackedDevicePose_t *"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "TriggerHapticPulse",
	"returntype": "void",
	"params": [ 
{	"paramname": "unControllerDeviceIndex" ,"paramtype": "vr::TrackedDeviceIndex_t"},
{	"paramname": "unAxisId" ,"paramtype": "uint32_t"},
{	"paramname": "usDurationMicroSec" ,"paramtype": "unsigned short"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetButtonIdNameFromEnum",
	"returntype": "const char *",
	"params": [ 
{	"paramname": "eButtonId" ,"paramtype": "vr::EVRButtonId"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "GetControllerAxisTypeNameFromEnum",
	"returntype": "const char *",
	"params": [ 
{	"paramname": "eAxisType" ,"paramtype": "vr::EVRControllerAxisType"}
	 ]
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "CaptureInputFocus",
	"returntype": "bool"
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "ReleaseInputFocus",
	"returntype": "void"
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "IsInputFocusCapturedByAnotherProcess",
	"returntype": "bool"
}
,{
	"classname": "vr::IVRSystem",
	"methodname": "DriverDebugRequest",
	"returntype": "uint32_t",
	"params": [ 
{	"paramname": "unDeviceIndex" ,"paramtype": "vr::TrackedDeviceIndex_t"},
{	"paramname": "pchRequest" ,"paramtype": "const char *"},
{	"paramname": "pchResponseBuffer" ,"paramtype": "char *"},
{	"paramname": "unResponseBufferSize" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "GetLastError",
	"returntype": "uint32_t",
	"params": [ 
{	"paramname": "pchBuffer" ,"out_string": " " ,"paramtype": "char *"},
{	"paramname": "unBufferSize" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "SetVSync",
	"returntype": "void",
	"params": [ 
{	"paramname": "bVSync" ,"paramtype": "bool"}
	 ]
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "GetVSync",
	"returntype": "bool"
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "SetGamma",
	"returntype": "void",
	"params": [ 
{	"paramname": "fGamma" ,"paramtype": "float"}
	 ]
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "GetGamma",
	"returntype": "float"
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "WaitGetPoses",
	"returntype": "vr::VRCompositorError",
	"params": [ 
{	"paramname": "pRenderPoseArray" ,"array_count": "unRenderPoseArrayCount" ,"paramtype": "struct vr::TrackedDevicePose_t *"},
{	"paramname": "unRenderPoseArrayCount" ,"paramtype": "uint32_t"},
{	"paramname": "pGamePoseArray" ,"array_count": "unGamePoseArrayCount" ,"paramtype": "struct vr::TrackedDevicePose_t *"},
{	"paramname": "unGamePoseArrayCount" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "Submit",
	"returntype": "vr::VRCompositorError",
	"params": [ 
{	"paramname": "eEye" ,"paramtype": "vr::Hmd_Eye"},
{	"paramname": "eTextureType" ,"paramtype": "vr::GraphicsAPIConvention"},
{	"paramname": "pTexture" ,"paramtype": "void *"},
{	"paramname": "pBounds" ,"paramtype": "const struct vr::VRTextureBounds_t *"}
	 ]
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "ClearLastSubmittedFrame",
	"returntype": "void"
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "GetFrameTiming",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pTiming" ,"paramtype": "struct vr::Compositor_FrameTiming *"},
{	"paramname": "unFramesAgo" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "FadeToColor",
	"returntype": "void",
	"params": [ 
{	"paramname": "fSeconds" ,"paramtype": "float"},
{	"paramname": "fRed" ,"paramtype": "float"},
{	"paramname": "fGreen" ,"paramtype": "float"},
{	"paramname": "fBlue" ,"paramtype": "float"},
{	"paramname": "fAlpha" ,"paramtype": "float"},
{	"paramname": "bBackground" ,"paramtype": "bool"}
	 ]
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "FadeGrid",
	"returntype": "void",
	"params": [ 
{	"paramname": "fSeconds" ,"paramtype": "float"},
{	"paramname": "bFadeIn" ,"paramtype": "bool"}
	 ]
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "CompositorBringToFront",
	"returntype": "void"
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "CompositorGoToBack",
	"returntype": "void"
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "CompositorQuit",
	"returntype": "void"
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "IsFullscreen",
	"returntype": "bool"
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "SetTrackingSpace",
	"returntype": "void",
	"params": [ 
{	"paramname": "eOrigin" ,"paramtype": "vr::TrackingUniverseOrigin"}
	 ]
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "GetTrackingSpace",
	"returntype": "vr::TrackingUniverseOrigin"
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "GetCurrentSceneFocusProcess",
	"returntype": "uint32_t"
}
,{
	"classname": "vr::IVRCompositor",
	"methodname": "CanRenderScene",
	"returntype": "bool"
}
,{
	"classname": "vr::IVRChaperone",
	"methodname": "GetCalibrationState",
	"returntype": "vr::ChaperoneCalibrationState"
}
,{
	"classname": "vr::IVRChaperone",
	"methodname": "GetSoftBoundsInfo",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pInfo" ,"paramtype": "struct vr::ChaperoneSoftBoundsInfo_t *"}
	 ]
}
,{
	"classname": "vr::IVRChaperone",
	"methodname": "GetHardBoundsInfo",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pQuadsBuffer" ,"out_array_count": "punQuadsCount" ,"paramtype": "struct vr::HmdQuad_t *"},
{	"paramname": "punQuadsCount" ,"paramtype": "uint32_t *"}
	 ]
}
,{
	"classname": "vr::IVRChaperone",
	"methodname": "GetSeatedBoundsInfo",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pInfo" ,"paramtype": "struct vr::ChaperoneSeatedBoundsInfo_t *"}
	 ]
}
,{
	"classname": "vr::IVRChaperone",
	"methodname": "ReloadInfo",
	"returntype": "void"
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "FindOverlay",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "pchOverlayKey" ,"paramtype": "const char *"},
{	"paramname": "pOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "CreateOverlay",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "pchOverlayKey" ,"paramtype": "const char *"},
{	"paramname": "pchOverlayFriendlyName" ,"paramtype": "const char *"},
{	"paramname": "pOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "DestroyOverlay",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "SetHighQualityOverlay",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "GetHighQualityOverlay",
	"returntype": "vr::VROverlayHandle_t"
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "GetOverlayErrorNameFromEnum",
	"returntype": "const char *",
	"params": [ 
{	"paramname": "error" ,"paramtype": "vr::VROverlayError"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "SetOverlayFlag",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "eOverlayFlag" ,"paramtype": "vr::VROverlayFlags"},
{	"paramname": "bEnabled" ,"paramtype": "bool"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "GetOverlayFlag",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "eOverlayFlag" ,"paramtype": "vr::VROverlayFlags"},
{	"paramname": "pbEnabled" ,"paramtype": "bool *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "SetOverlayColor",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "fRed" ,"paramtype": "float"},
{	"paramname": "fGreen" ,"paramtype": "float"},
{	"paramname": "fBlue" ,"paramtype": "float"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "GetOverlayColor",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "pfRed" ,"paramtype": "float *"},
{	"paramname": "pfGreen" ,"paramtype": "float *"},
{	"paramname": "pfBlue" ,"paramtype": "float *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "SetOverlayAlpha",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "fAlpha" ,"paramtype": "float"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "GetOverlayAlpha",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "pfAlpha" ,"paramtype": "float *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "SetOverlayGamma",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "fGamma" ,"paramtype": "float"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "GetOverlayGamma",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "pfGamma" ,"paramtype": "float *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "SetOverlayWidthInMeters",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "fWidthInMeters" ,"paramtype": "float"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "GetOverlayWidthInMeters",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "pfWidthInMeters" ,"paramtype": "float *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "SetOverlayTextureBounds",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "pOverlayTextureBounds" ,"paramtype": "const struct vr::VRTextureBounds_t *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "GetOverlayTextureBounds",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "pOverlayTextureBounds" ,"paramtype": "struct vr::VRTextureBounds_t *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "GetOverlayTransformType",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "peTransformType" ,"paramtype": "vr::VROverlayTransformType *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "SetOverlayTransformAbsolute",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "eTrackingOrigin" ,"paramtype": "vr::TrackingUniverseOrigin"},
{	"paramname": "pmatTrackingOriginToOverlayTransform" ,"paramtype": "const struct vr::HmdMatrix34_t *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "GetOverlayTransformAbsolute",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "peTrackingOrigin" ,"paramtype": "vr::TrackingUniverseOrigin *"},
{	"paramname": "pmatTrackingOriginToOverlayTransform" ,"paramtype": "struct vr::HmdMatrix34_t *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "SetOverlayTransformTrackedDeviceRelative",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "unTrackedDevice" ,"paramtype": "vr::TrackedDeviceIndex_t"},
{	"paramname": "pmatTrackedDeviceToOverlayTransform" ,"paramtype": "const struct vr::HmdMatrix34_t *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "GetOverlayTransformTrackedDeviceRelative",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "punTrackedDevice" ,"paramtype": "vr::TrackedDeviceIndex_t *"},
{	"paramname": "pmatTrackedDeviceToOverlayTransform" ,"paramtype": "struct vr::HmdMatrix34_t *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "ShowOverlay",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "HideOverlay",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "IsOverlayVisible",
	"returntype": "bool",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "PollNextOverlayEvent",
	"returntype": "bool",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "pEvent" ,"paramtype": "struct vr::VREvent_t *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "GetOverlayInputMethod",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "peInputMethod" ,"paramtype": "vr::VROverlayInputMethod *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "SetOverlayInputMethod",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "eInputMethod" ,"paramtype": "vr::VROverlayInputMethod"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "GetOverlayMouseScale",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "pvecMouseScale" ,"paramtype": "struct vr::HmdVector2_t *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "SetOverlayMouseScale",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "pvecMouseScale" ,"paramtype": "const struct vr::HmdVector2_t *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "ComputeOverlayIntersection",
	"returntype": "bool",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "pParams" ,"paramtype": "const struct vr::VROverlayIntersectionParams_t *"},
{	"paramname": "pResults" ,"paramtype": "struct vr::VROverlayIntersectionResults_t *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "HandleControllerOverlayInteractionAsMouse",
	"returntype": "bool",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "unControllerDeviceIndex" ,"paramtype": "vr::TrackedDeviceIndex_t"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "SetOverlayTexture",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "eTextureType" ,"paramtype": "vr::GraphicsAPIConvention"},
{	"paramname": "pTexture" ,"paramtype": "void *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "ClearOverlayTexture",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "SetOverlayRaw",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "pvBuffer" ,"paramtype": "void *"},
{	"paramname": "unWidth" ,"paramtype": "uint32_t"},
{	"paramname": "unHeight" ,"paramtype": "uint32_t"},
{	"paramname": "unDepth" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "SetOverlayFromFile",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "pchFilePath" ,"paramtype": "const char *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "CreateDashboardOverlay",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "pchOverlayKey" ,"paramtype": "const char *"},
{	"paramname": "pchOverlayFriendlyName" ,"paramtype": "const char *"},
{	"paramname": "pMainHandle" ,"paramtype": "vr::VROverlayHandle_t *"},
{	"paramname": "pThumbnailHandle" ,"paramtype": "vr::VROverlayHandle_t *"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "IsDashboardVisible",
	"returntype": "bool"
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "IsActiveDashboardOverlay",
	"returntype": "bool",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "SetDashboardOverlaySceneProcess",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "unProcessId" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVROverlay",
	"methodname": "GetDashboardOverlaySceneProcess",
	"returntype": "vr::VROverlayError",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "punProcessId" ,"paramtype": "uint32_t *"}
	 ]
}
,{
	"classname": "vr::IVRRenderModels",
	"methodname": "LoadRenderModel",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pchRenderModelName" ,"paramtype": "const char *"},
{	"paramname": "pRenderModel" ,"paramtype": "struct vr::RenderModel_t *"}
	 ]
}
,{
	"classname": "vr::IVRRenderModels",
	"methodname": "FreeRenderModel",
	"returntype": "void",
	"params": [ 
{	"paramname": "pRenderModel" ,"paramtype": "struct vr::RenderModel_t *"}
	 ]
}
,{
	"classname": "vr::IVRRenderModels",
	"methodname": "GetRenderModelName",
	"returntype": "uint32_t",
	"params": [ 
{	"paramname": "unRenderModelIndex" ,"paramtype": "uint32_t"},
{	"paramname": "pchRenderModelName" ,"out_string": " " ,"paramtype": "char *"},
{	"paramname": "unRenderModelNameLen" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRRenderModels",
	"methodname": "GetRenderModelCount",
	"returntype": "uint32_t"
}
,{
	"classname": "vr::IVRControlPanel",
	"methodname": "GetDriverCount",
	"returntype": "uint32_t"
}
,{
	"classname": "vr::IVRControlPanel",
	"methodname": "GetDriverId",
	"returntype": "uint32_t",
	"params": [ 
{	"paramname": "unDriverIndex" ,"paramtype": "uint32_t"},
{	"paramname": "pchBuffer" ,"paramtype": "char *"},
{	"paramname": "unBufferLen" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRControlPanel",
	"methodname": "GetDriverDisplayCount",
	"returntype": "uint32_t",
	"params": [ 
{	"paramname": "pchDriverId" ,"paramtype": "const char *"}
	 ]
}
,{
	"classname": "vr::IVRControlPanel",
	"methodname": "GetDriverDisplayId",
	"returntype": "uint32_t",
	"params": [ 
{	"paramname": "pchDriverId" ,"paramtype": "const char *"},
{	"paramname": "unDisplayIndex" ,"paramtype": "uint32_t"},
{	"paramname": "pchBuffer" ,"paramtype": "char *"},
{	"paramname": "unBufferLen" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRControlPanel",
	"methodname": "GetDriverDisplayModelNumber",
	"returntype": "uint32_t",
	"params": [ 
{	"paramname": "pchDriverId" ,"paramtype": "const char *"},
{	"paramname": "pchDisplayId" ,"paramtype": "const char *"},
{	"paramname": "pchBuffer" ,"paramtype": "char *"},
{	"paramname": "unBufferLen" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRControlPanel",
	"methodname": "GetDriverDisplaySerialNumber",
	"returntype": "uint32_t",
	"params": [ 
{	"paramname": "pchDriverId" ,"paramtype": "const char *"},
{	"paramname": "pchDisplayId" ,"paramtype": "const char *"},
{	"paramname": "pchBuffer" ,"paramtype": "char *"},
{	"paramname": "unBufferLen" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRControlPanel",
	"methodname": "LoadSharedResource",
	"returntype": "uint32_t",
	"params": [ 
{	"paramname": "pchResourceName" ,"paramtype": "const char *"},
{	"paramname": "pchBuffer" ,"paramtype": "char *"},
{	"paramname": "unBufferLen" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRControlPanel",
	"methodname": "GetIPD",
	"returntype": "float"
}
,{
	"classname": "vr::IVRControlPanel",
	"methodname": "SetIPD",
	"returntype": "void",
	"params": [ 
{	"paramname": "fIPD" ,"paramtype": "float"}
	 ]
}
,{
	"classname": "vr::IVRControlPanel",
	"methodname": "GetCurrentCompositorInterface",
	"returntype": "class vr::IVRCompositor *",
	"params": [ 
{	"paramname": "pchInterfaceVersion" ,"paramtype": "const char *"}
	 ]
}
,{
	"classname": "vr::IVRControlPanel",
	"methodname": "QuitProcess",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pidProcessToQuit" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRCameraAccess",
	"methodname": "GetCameraCount",
	"returntype": "uint32_t"
}
,{
	"classname": "vr::IVRCameraAccess",
	"methodname": "GetCameraId",
	"returntype": "uint32_t",
	"params": [ 
{	"paramname": "unCameraIndex" ,"paramtype": "uint32_t"},
{	"paramname": "pchBuffer" ,"paramtype": "char *"},
{	"paramname": "unBufferLen" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRCameraAccess",
	"methodname": "EnableCamera",
	"returntype": "bool",
	"params": [ 
{	"paramname": "unCameraIndex" ,"paramtype": "uint32_t"},
{	"paramname": "bEnabled" ,"paramtype": "bool"}
	 ]
}
,{
	"classname": "vr::IVRCameraAccess",
	"methodname": "GetCameraInfo",
	"returntype": "bool",
	"params": [ 
{	"paramname": "unCameraIndex" ,"paramtype": "uint32_t"},
{	"paramname": "pCameraInfo" ,"paramtype": "struct vr::CameraInfo_t *"}
	 ]
}
,{
	"classname": "vr::IVRCameraAccess",
	"methodname": "GetCameraImage",
	"returntype": "bool",
	"params": [ 
{	"paramname": "unCameraIndex" ,"paramtype": "uint32_t"},
{	"paramname": "pCameraImage" ,"paramtype": "struct vr::CameraImage_t *"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "CommitWorkingCopy",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pchCalibrationName" ,"paramtype": "const char *"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "RevertWorkingCopy",
	"returntype": "void"
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "GetWorkingSoftBoundsInfo",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pInfo" ,"paramtype": "struct vr::ChaperoneSoftBoundsInfo_t *"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "GetWorkingHardBoundsInfo",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pQuadsBuffer" ,"out_array_count": "punQuadsCount" ,"paramtype": "struct vr::HmdQuad_t *"},
{	"paramname": "punQuadsCount" ,"paramtype": "uint32_t *"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "GetWorkingSeatedZeroPoseToRawTrackingPose",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pmatSeatedZeroPoseToRawTrackingPose" ,"paramtype": "struct vr::HmdMatrix34_t *"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "GetWorkingStandingZeroPoseToRawTrackingPose",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pmatStandingZeroPoseToRawTrackingPose" ,"paramtype": "struct vr::HmdMatrix34_t *"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "SetWorkingSoftBoundsInfo",
	"returntype": "void",
	"params": [ 
{	"paramname": "pInfo" ,"paramtype": "const struct vr::ChaperoneSoftBoundsInfo_t *"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "SetWorkingHardBoundsInfo",
	"returntype": "void",
	"params": [ 
{	"paramname": "pQuadsBuffer" ,"array_count": "unQuadsCount" ,"paramtype": "struct vr::HmdQuad_t *"},
{	"paramname": "unQuadsCount" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "SetWorkingSeatedZeroPoseToRawTrackingPose",
	"returntype": "void",
	"params": [ 
{	"paramname": "matSeatedZeroPoseToRawTrackingPose" ,"paramtype": "const struct vr::HmdMatrix34_t &"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "SetWorkingStandingZeroPoseToRawTrackingPose",
	"returntype": "void",
	"params": [ 
{	"paramname": "matStandingZeroPoseToRawTrackingPose" ,"paramtype": "const struct vr::HmdMatrix34_t &"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "GetWorkingTagPoses",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pTagPosesBuffer" ,"out_array_count": "punTagPosesCount" ,"paramtype": "struct vr::HmdMatrix34_t *"},
{	"paramname": "punTagPosesCount" ,"paramtype": "uint32_t *"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "GetWorkingTagPoseScales",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pflScaleBuffer" ,"out_array_count": "punTagPosesCount" ,"paramtype": "float *"},
{	"paramname": "punTagPosesCount" ,"paramtype": "uint32_t *"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "GetWorkingTagPoseNameByIndex",
	"returntype": "uint32_t",
	"params": [ 
{	"paramname": "nIndex" ,"paramtype": "uint32_t"},
{	"paramname": "pchBuffer" ,"out_string": " " ,"paramtype": "char *"},
{	"paramname": "unBufferSize" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "GetWorkingTagPoseByName",
	"returntype": "bool",
	"params": [ 
{	"paramname": "pchTagName" ,"paramtype": "const char *"},
{	"paramname": "pmatTagPose" ,"paramtype": "struct vr::HmdMatrix34_t *"},
{	"paramname": "pflScale" ,"paramtype": "float *"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "SetWorkingTagPoseByName",
	"returntype": "void",
	"params": [ 
{	"paramname": "pchTagName" ,"paramtype": "const char *"},
{	"paramname": "matSeatedZeroPoseToRawTrackingPose" ,"paramtype": "const struct vr::HmdMatrix34_t &"},
{	"paramname": "flScale" ,"paramtype": "float"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "RemoveWorkingTagPoseByName",
	"returntype": "void",
	"params": [ 
{	"paramname": "pchTagName" ,"paramtype": "const char *"}
	 ]
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "RemoveAllWorkingTagPoses",
	"returntype": "void"
}
,{
	"classname": "vr::IVRChaperoneSetup",
	"methodname": "ReloadFromDisk",
	"returntype": "void"
}
,{
	"classname": "vr::IVRNotifications",
	"methodname": "GetErrorString",
	"returntype": "uint32_t",
	"params": [ 
{	"paramname": "error" ,"paramtype": "vr::NotificationError_t"},
{	"paramname": "pchBuffer" ,"out_string": " " ,"paramtype": "char *"},
{	"paramname": "unBufferSize" ,"paramtype": "uint32_t"}
	 ]
}
,{
	"classname": "vr::IVRNotifications",
	"methodname": "NotificationStart", "desc": "Find out the status of an asynchronous Notification result handle.",
	"returntype": "vr::NotificationError_t",
	"params": [ 
{	"paramname": "ulOverlayHandle" ,"paramtype": "vr::VROverlayHandle_t"},
{	"paramname": "strType" ,"paramtype": "char *"},
{	"paramname": "pTexture" ,"paramtype": "void *"},
{	"paramname": "ulUserValue" ,"paramtype": "uint64_t"},
{	"paramname": "pNotificationId" ,"paramtype": "vr::VRNotificationId *"}
	 ]
}
,{
	"classname": "vr::IVRNotifications",
	"methodname": "UpdateTexture", "desc": "Update the texture of the notification",
	"returntype": "vr::NotificationError_t",
	"params": [ 
{	"paramname": "notificationId" ,"paramtype": "vr::VRNotificationId"},
{	"paramname": "pTexture" ,"paramtype": "void *"}
	 ]
}
,{
	"classname": "vr::IVRNotifications",
	"methodname": "DismissNotification", "desc": "Dismiss the notification",
	"returntype": "vr::NotificationError_t",
	"params": [ 
{	"paramname": "notificationId" ,"paramtype": "vr::VRNotificationId"}
	 ]
}
]
}